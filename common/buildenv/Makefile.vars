# vim: set noet ts=4:

# Various global variables
OUT_DIR := out
OUT_SRC := src-out
BUILD_DIR := builddir
CACHE := cache
PKGNAME := $(NAME)
MANIFEST_FILE := $(shell pwd)/MANIFEST
CACHE_DIR := $(shell pwd)/$(CACHE)/
ifeq ("$(DIST)", "")
  DIST := unknown
endif
DIST_OS := $(shell echo $(DIST) | sed 's/-backports//')
DIST_TAG := $(shell \
  if [ -e ./buildenv/get_dist.sh ];then ./buildenv/get_dist.sh $(DIST_OS) | cut -d ':' -f 1; exit; fi; \
  if [ -e ./common/buildenv/get_dist.sh ];then ./common/buildenv/get_dist.sh $(DIST_OS) | cut -d ':' -f 1; exit;fi \
)
DIST_CODE :=  $(shell \
  if [ -e ./buildenv/get_dist.sh ];then ./buildenv/get_dist.sh $(DIST_OS) | cut -d ':' -f 2; exit; fi; \
  if [ -e ./common/buildenv/get_dist.sh ];then ./common/buildenv/get_dist.sh $(DIST_OS) | cut -d ':' -f 2; exit;fi \
)

DIST_FULL :=  $(shell \
  if [ -e ./buildenv/get_dist.sh ];then ./buildenv/get_dist.sh $(DIST_OS) | cut -d ':' -f 3; exit; fi; \
  if [ -e ./common/buildenv/get_dist.sh ];then ./common/buildenv/get_dist.sh $(DIST_OS) | cut -d ':' -f 3; exit;fi \
)

# wget_sum.sh helper variable
# handles the manifest target (building of the MANIFEST file with checksums)
ifeq ($(MAKECMDGOALS), manifest)
WGS := ./buildenv/wget_sum.sh -c -m $(MANIFEST_FILE) -C "$(CACHE_DIR)"
else
WGS := ./buildenv/wget_sum.sh -m $(MANIFEST_FILE) -C "$(CACHE_DIR)"
endif

# git_sum.sh helper variable
# handles the manifest target (building of the MANIFEST file with checksums)
ifeq ($(MAKECMDGOALS), manifest)
GS := ./buildenv/git_sum.sh -c -m $(MANIFEST_FILE) -C "$(CACHE_DIR)"
else
GS := ./buildenv/git_sum.sh -m $(MANIFEST_FILE) -C "$(CACHE_DIR)"
endif

# Some variables for cowbuilder
COW_DIR := /var/cache/pbuilder/
ifneq ("$(DIST)", "unknown")
  COW_DIST := --distribution $(DIST_OS)
endif

ifeq ($(shell id -u), 1)
  SUDO :=
else
  SUDO := sudo
endif

ifeq ("$(COW_NAME)", "")
  COW_NAME := $(DIST).cow
endif

ifeq ("$(DIST_CODE)", "ubu")
  COW_UBUNTU := --components "main universe multiverse"
  DEB_MIRROR := http://ftp.uni-stuttgart.de/ubuntu/
else
  DEB_MIRROR := http://ftp.debian.org/debian/
endif

ifneq ("$(DIST)", "sid")
OTHERMIRROR := deb $(DEB_MIRROR) $(DIST_OS)-backports main
endif

ifneq ("$(LOCAL_REPO_PATH)", "")
  ifneq ("$(LOCAL_REPO_PATH)", "")
    OTHERMIRROR := $(OTHERMIRROR)|
  endif
  OTHERMIRROR := $(OTHERMIRROR)deb [trusted=yes] file://$(LOCAL_REPO_PATH) /
  BINDMOUNT := --bindmounts "$(LOCAL_REPO_PATH)"
endif

OTHERMIRROR := --othermirror "$(OTHERMIRROR)"

ARCH := $(shell uname -m)


# Parse the skip string to get if this specific dist/version combo must be ignored
TO_SKIP = $(shell \
  if [ -e ./buildenv/skip_flag.sh ];then ./buildenv/skip_flag.sh -i "$(SKIP)" -d "$(DIST_CODE)" -v "$(DIST_TAG)"; exit; fi; \
  if [ -e ./common/buildenv/skip_flag.sh ];then ./common/buildenv/skip_flag.sh -i "$(SKIP)" -d "$(DIST_CODE)" -v "$(DIST_TAG)"; exit; fi; \
)
