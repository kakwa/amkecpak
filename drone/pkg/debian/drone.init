#!/bin/sh

### BEGIN INIT INFO
# Provides:          drone
# Required-Start:    $remote_fs $network $syslog
# Required-Stop:     $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:        
# Short-Description: drone
### END INIT INFO

PIDFILE=/var/run/drone/drone.pid
CONF=/etc/drone/drone.env
USER=drone
GROUP=drone
BIN=/usr/bin/drone
OPTS="-config=$CONF"

. /lib/lsb/init-functions

if [ -f /etc/default/drone ]; then
    . /etc/default/drone
fi

start_drone(){
    log_daemon_msg "Starting drone" "drone" || true
    pidofproc -p $PIDFILE $BIN >/dev/null
    status="$?"
    if [ $status -eq 0 ]
    then
        log_end_msg 1 
        log_failure_msg \
            "drone already started"
        return 1
    fi
    mkdir -p `dirname $PIDFILE` -m 750
    chown $USER:$GROUP `dirname $PIDFILE`
    export USER=$USER
    if start-stop-daemon -c drone:drone --start --quiet \
        --pidfile /var/run/drone/drone.pid --make-pidfile \
        --background --startas /usr/bin/pipexec -- -k -p /var/run/drone/drone.pid -- \
        [ D /usr/bin/drone -config=/etc/drone/drone.env ] \
        [ L1 /usr/bin/logger -t drone -p user.info ] \
        '{D:2>L1:0}' '{D:1>L1:0}'
    then
        wait_start 3
        ret=$?
        log_end_msg $ret || true
        return $ret
    else
        log_end_msg 1 || true
        return 1
    fi
}

stop_drone(){
    log_daemon_msg "Stopping drone" "drone" || true
    if start-stop-daemon --stop --quiet \
        --pidfile $PIDFILE --remove-pidfile
    then
        log_end_msg 0 || true
        return 0
    else
        log_end_msg 1 || true
        return 1
    fi
}

wait_start(){
    timeout_start=$(( $1 * 2 ))
    c=0
    wait_stop 1
    while ! pidofproc -p $PIDFILE $BIN >/dev/null && [ $c -lt $timeout_start ]
    do
        sleep 0.5
        c=$(( $c + 1 ))
    done
    ! [ $c -eq $timeout_start ]
    return $?
}

wait_stop(){
    timeout_stop=$(( $1 * 2 ))
    c=0
    while pidofproc -p $PIDFILE $BIN >/dev/null && [ $c -lt $timeout_stop ]
    do
        sleep 0.5
        c=$(( $c + 1 ))
    done
}

case "$1" in
    start)
        start_drone
        exit $?
        ;;
    stop)
        stop_drone
        exit $?
        ;;
    restart)
        stop_drone
        wait_stop 10
        start_drone
        exit $?
        ;;
    status)
        status_of_proc -p $PIDFILE $BIN "drone" \
            && exit 0 || exit $?
        ;;
    *)
        log_action_msg \
            "Usage: /etc/init.d/drone {start|stop|restart|status}" \
            || true
        exit 1
esac

exit 0
